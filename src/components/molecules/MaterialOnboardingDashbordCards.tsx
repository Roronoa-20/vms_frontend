"use client";

import Image from "next/image";
import { TvendorRegistrationDropdown } from "@/src/types/types";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import API_END_POINTS from "@/src/services/apiEndPoints";
import { useEffect, useState } from "react";
import { useAuth } from "@/src/context/AuthContext";
import DashboardTable from "./Material-Onboarding-Dashboard-Table";
import { cardCount } from "../pages/MaterialOnboardingDashboard";
import requestWrapper from "@/src/services/apiCall";
import { MaterialRequestItem } from "@/src/types/MaterialRequestTableTypes";

type Props = {
  cardData: cardCount;
  companyDropdown: TvendorRegistrationDropdown["message"]["data"]["company_master"];
};

const MaterialOnboardingCards = ({ cardData, companyDropdown }: Props) => {
  const { designation } = useAuth();
  const [loading, setLoading] = useState<boolean>(false);
  const [allData, setAllData] = useState<MaterialRequestItem[]>([]);
  const [activeTab, setActiveTab] = useState<string>("Total Request");

  const fetchTableData = async (page: number = 1) => {
    setLoading(true);
    try {
      const response = await requestWrapper({
        url: `${API_END_POINTS.getRequestorMasterTableList}`,
        method: "GET",
      });
      const data = response.data?.message?.data || [];

      setAllData(data);
    } catch (err) {
      console.error("Error fetching data:", err);
    } finally {
      setLoading(false);
      console.log("Loading state set to false");
    }
  };

  const getFilteredData = (tabName: string) => {
    const APPROVED_STATUS = "Code Generated by SAP";
    if (!allData.length) {
      return [];
    }

    if (tabName === "Approved Request") {
      const filtered = allData.filter((d) => d.approval_status === APPROVED_STATUS);
      return filtered;
    } else if (tabName === "Pending Request") {
      const filtered = allData.filter((d) => d.approval_status !== APPROVED_STATUS);
      return filtered;
    }
    return allData;
  };

  const allCardData = [
    {
      name: "Total Request",
      count: cardData?.total_count ?? 0,
      icon: "/dashboard-assests/cards_icon/file-search.svg",
      text_color: "text-emerald-800",
      bg_color: "bg-emerald-100",
      hover: "hover:border-emerald-400",
    },
    {
      name: "Pending Request",
      count: cardData?.pending ?? 0,
      icon: "/dashboard-assests/cards_icon/file-search.svg",
      text_color: "text-violet-800",
      bg_color: "bg-violet-100",
      hover: "hover:border-violet-400",
    },
    {
      name: "Approved Request",
      count: cardData?.approved ?? 0,
      icon: "/dashboard-assests/cards_icon/file-search.svg",
      text_color: "text-rose-800",
      bg_color: "bg-rose-100",
      hover: "hover:border-rose-400",
    },
  ];

  useEffect(() => {
    fetchTableData();
  }, []);

  return (
    <div>
      <Tabs value={activeTab} onValueChange={setActiveTab} className="">
        <TabsList className="grid grid-cols-3 gap-4 h-full pb-6 bg-white">
          {allCardData.map((item) => (
            <TabsTrigger
              key={item.name}
              value={item.name}
              className="data-[state=active]:bg-white data-[state=active]:shadow-md data-[state=active]:text-black text-gray-500 rounded-2xl p-0 transition-all duration-300 ease-in-out"
            >
              <div
                className={`group w-full h-full rounded-2xl ${item.bg_color} flex flex-col p-3 ${item.text_color} justify-between border-2 ${item.hover} hover:scale-105 transition duration-300 transform cursor-pointer shadow-md`}
              >
                <div className="flex w-full justify-between">
                  <h1 className="text-[13px]">{item.name}</h1>
                  <Image src={item.icon} alt="" width={25} height={30} />
                </div>
                <div className="text-[20px] text-start font-bold">{item.count}</div>
              </div>
            </TabsTrigger>
          ))}
        </TabsList>

        {allCardData.map((item) => (
          <TabsContent key={item.name} value={item.name}>
            {loading ? (
              <div className="text-center py-10 text-gray-500">Loading...</div>
            ) : (
              <DashboardTable
                data={getFilteredData(item.name)}
                companyDropdown={companyDropdown}
                TableTitle={item.name}
              />
            )}
          </TabsContent>
        ))}
      </Tabs>
    </div>
  );
};

export default MaterialOnboardingCards;